install.packages("jsonlite")
library(ggplot2)
library(car) #recode()
library(dplyr)
setwd("~/GitHub/RepData_PeerAssessment2")
# Import Data
data.raw = read.csv(bzfile("repdata-data-StormData.csv.bz2")) #Can read .bz2 files directly with bzfile()
library(ggplot2)
library(car) #recode()
library(dplyr)
setwd("~/GitHub/RepData_PeerAssessment2")
# Import Data
data.raw = read.csv(bzfile("repdata-data-StormData.csv.bz2")) #Can read .bz2 files directly with bzfile()
data.analysis = data.raw[ ,c('EVTYPE', 'FATALITIES', 'INJURIES', 'PROPDMG', 'CROPDMG', 'PROPDMGEXP', 'CROPDMGEXP')]
data.analysis$PROPDMGEXP = as.numeric(
recode(data.analysis$PROPDMGEXP, "
c('-','?','+','') = 1;
c('h','H') = 1e+02;
c('k','K') = 1e+03;
c('m','M') = 1e+06;
c('b','B') = 1e+09;
'0' = 1;
'1' = 10;
'2' = 1e+02;
'3' = 1e+03;
'4' = 1e+04;
'5' = 1e+05;
'6' = 1e+06;
'7' = 1e+07;
'8' = 1e+08;
", as.factor.result = FALSE
)
)
#Update PROPDMG values with new mumeric PROPDMGEXP values
data.analysis$PROPDMG = data.analysis$PROPDMG * data.analysis$PROPDMGEXP
#Recode CROPDMGEXP values
data.analysis$CROPDMGEXP = as.numeric(
recode(data.analysis$CROPDMGEXP, "
c('-','?','+','') = 1;
c('h','H') = 1e+02;
c('k','K') = 1e+03;
c('m','M') = 1e+06;
c('b','B') = 1e+09;
'0' = 1;
'1' = 10;
'2' = 1e+02;
'3' = 1e+03;
'4' = 1e+04;
'5' = 1e+05;
'6' = 1e+06;
'7' = 1e+07;
'8' = 1e+08;
", as.factor.result = FALSE
)
)
#Update CROPDMG values with new mumeric CROPDMGEXP values
data.analysis$CROPDMG = data.analysis$CROPDMG * data.analysis$CROPDMGEXP
data.analysis$TOTALDMG = data.analysis$PROPDMG + data.analysis$CROPDMG
#Add FATALITIES + INJURIES as TOTALDEATHINJ
data.analysis$TOTALDEATHINJ = data.analysis$FATALITIES + data.analysis$INJURIES
data.analysis.health = data.analysis[ ,c('EVTYPE','FATALITIES','INJURIES','TOTALDEATHINJ')]
#Create .damage dataset, Remove EXP columns for clean summerization
data.analysis.damage = data.analysis[ ,c('EVTYPE','PROPDMG','CROPDMG','TOTALDMG')]
#Summerize Health using dplyr
data.analysis.health.sum =
data.analysis.health %>%
group_by(EVTYPE) %>%
summarise_each(funs(sum)) %>%
arrange(desc(TOTALDEATHINJ))
data.analysis.damage.sum =
data.analysis.damage %>%
group_by(EVTYPE) %>%
summarise_each(funs(sum)) %>%
arrange(desc(TOTALDMG))
AllUp.DeathInj = sum(data.analysis.health.sum$TOTALDEATHINJ)
Top10.DeathInj = sum(data.analysis.health.sum[1:10,4])
PrctTop10.DeathInj = Top10.DeathInj/AllUp.DeathInj
TopEVTYPE.DeathInj = sum(data.analysis.health.sum[1,4])
PrctTopEVTYPE.DeathInj = TopEVTYPE.DeathInj/AllUp.DeathInj
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
)
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(x=EVTYPE, y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
)
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
)
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
)
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity")) +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
)
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Weather Events") +
xlab("Total Deaths & Injuries")
View(data.analysis.health.sum)
View(data.analysis.damage.sum)
AllUp.Damage = sum(data.analysis.damage.sum$TOTALDMG)
Top10.Damage = sum(data.analysis.damage.sum[1:10,4])
PrctTop10.Damage = Top10.Damage/AllUp.Damage
TopEVTYPE.Damage = sum(data.analysis.damage.sum[1,4])
PrctTopEVTYPE.Damage = TopEVTYPE.Damage/AllUp.Damage
data.analysis.damage.sum[1,4]
data.analysis.damage.sum[1:10,4]
data.analysis.damage.sum[1:10,]
data.analysis.damage.sum[1:10, ]
ggplot(data.analysis.damage.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDMG, sum), y=TOTALDMG/1e+09), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Damage") +
ylab("Weather Events") +
xlab("Total Damage in Billions")
ggplot(data.analysis.health.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDEATHINJ, sum), y=TOTALDEATHINJ), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Deaths & Injuries") +
ylab("Total Deaths & Injuries") +
xlab("Weather Events")
ggplot(data.analysis.damage.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDMG, sum), y=TOTALDMG/1e+06), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Damage") +
ylab("Weather Events") +
xlab("Total Damage in $ Millions")
ggplot(data.analysis.damage.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDMG, sum), y=TOTALDMG/1e+06), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Damage") +
ylab("WTotal Damage in $ Millions") +
xlab("Weather Events")
ggplot(data.analysis.damage.sum[1:10, ]) +
geom_bar(aes(reorder(EVTYPE, TOTALDMG, sum), y=TOTALDMG/1e+09), width=0.5, stat="identity") +
coord_flip() +
ggtitle("Top 10 Weather Events by Total Damage") +
ylab("Total Damage in $ Billions") +
xlab("Weather Events")
install.packages("packrat")
install.packages("rstudioapi")
